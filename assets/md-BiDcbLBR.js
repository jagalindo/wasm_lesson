import{_ as k}from"./slidev/CodeBlockWrapper.vue_vue_type_script_setup_true_lang-DVjMROeK.js";import{d as w,r as d,b as v,o as g,C as m,m as x,w as f,g as e,e as c,z as l,v as _,x as A}from"./modules/vue-DXKQheef.js";import{u as h,f as P}from"./slidev/context-Bc-9Nx3N.js";import{l as S,y as W,z as p,A as b,B as C}from"./index-c_Lio-KY.js";import{I as T}from"./slidev/default-Db47zx7t.js";import"./modules/unplugin-icons-De9Fq26x.js";import"./modules/shiki-nDhZyzQJ.js";const $=w({__name:"SlidevSpotlight",setup(y){h();const{isPresenter:r}=S(),o=d({x:0,y:0}),n=d(!1);let s;C(t=>{const{spotlight:a}=t;n.value=!!(a!=null&&a.x),n.value&&(o.value=a)});function u(t){n.value||(s=p.value),i(t)}function i(t){if(n.value=!!t.x,r.value){const a=!!t.x;a&&(p.value=!1),b("cursor",{x:-100,y:-100}),b("spotlight",t),a||(p.value=s)}}return(t,a)=>(g(),v(m(W),x(t.$attrs,{active:n.value,x:o.value.x,y:o.value.y,onActivate:u,onDeactivate:a[0]||(a[0]=B=>i({})),onUpdate:i}),null,16,["active","x","y"]))}}),D={__name:"slides.md__slidev_6",setup(y){const{$clicksContext:r,$frontmatter:o}=h();return r.setup(),(n,s)=>{const u=$,i=k;return g(),v(T,_(A(m(P)(m(o),5))),{default:f(()=>[s[1]||(s[1]=e("h1",null,"Ejemplo en WebAssembly Text (WAT)",-1)),c(u),s[2]||(s[2]=e("p",null,"WAT (WebAssembly Text format) es la representación textual legible por humanos del código WebAssembly, que normalmente se guarda en formato binario .wasm. Se usa principalmente para:",-1)),s[3]||(s[3]=e("ul",null,[e("li",null,"Escribir manualmente pequeños módulos."),e("li",null,"Depurar o inspeccionar el contenido de un .wasm."),e("li",null,"Aprender cómo funciona WebAssembly a bajo nivel.")],-1)),s[4]||(s[4]=e("p",null,"Ejemplo:",-1)),c(i,x({},{ranges:[]}),{default:f(()=>s[0]||(s[0]=[e("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light slidev-code",style:{"--shiki-dark":"#dbd7caee","--shiki-light":"#393a34","--shiki-dark-bg":"#121212","--shiki-light-bg":"#ffffff"}},[e("code",{class:"language-plaintext"},[e("span",{class:"line"},[e("span",null,"(module")]),l(`
`),e("span",{class:"line"},[e("span",null,'  (func (export "add") (param i32 i32) (result i32)')]),l(`
`),e("span",{class:"line"},[e("span",null,"    local.get 0")]),l(`
`),e("span",{class:"line"},[e("span",null,"    local.get 1")]),l(`
`),e("span",{class:"line"},[e("span",null,"    i32.add)")]),l(`
`),e("span",{class:"line"},[e("span",null,")")])])],-1)])),_:1},16),s[5]||(s[5]=l(" Este módulo define una función llamada add que suma dos enteros de 32 bits. ")),s[6]||(s[6]=e("ul",null,[e("li",null,[l("Probemoslo: "),e("a",{href:"https://webassembly.github.io/wabt/demo/",target:"_blank"},"https://webassembly.github.io/wabt/demo/")]),e("li",null,[l("Información: "),e("a",{href:"https://github.com/WebAssembly/wabt",target:"_blank"},"https://github.com/WebAssembly/wabt")])],-1))]),_:1},16)}}};export{D as default};
